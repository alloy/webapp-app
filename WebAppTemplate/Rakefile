# Load Rucola tasks
SOURCE_ROOT = File.dirname(__FILE__)
require 'rubygems'
require 'rucola/rucola_support'
load 'rucola/tasks/main.rake'

# Application configuration

# You only need to specify this if for some reason the applications name
# might be different than the one specified in the Info.plist file under key: CFBundleExecutable
#
# APPNAME = "WebAppTemplate"
# TARGET  = "#{APPNAME}.app"

# You only need to specify this if for some reason the applications version
# might be different than the one specified in the Info.plist file under key: CFBundleVersion
#
# APPVERSION = INFO_PLIST['CFBundleShortVersionString']
# APPVERSION = "rev#{`svn info`[/Revision: (\d+)/, 1]}"
# APPVERSION = Time.now.strftime("%Y-%m-%d")

# PUBLISH_URI = URI.parse('scp://yourname@yourhost:port/path')
# APPCAST_URI = PUBLISH_URI

# Tasks

desc 'Build and run a WebApp Application in debug mode'
task :debug_build do
  ENV['DONT_START_RUBYCOCOA_APP'] = 'true'
  Rake::Task['xcode:build'].invoke
  FileUtils.cp 'bundles/Campfire.wabundle/icon.tiff', 'build/Debug/WebAppTemplate.app/Contents/Resources/icon.tiff'
  ENV['DONT_START_RUBYCOCOA_APP'] = nil
  Rake::Task['xcode:run'].invoke
end
task :default => :debug_build

desc 'Deploy a release build.'
task :deploy do
  puts "\nDeploying...\n\n"
  
  Rake::Task['release'].invoke
  Rake::Task['deploy:package'].invoke
  # Rake::Task['deploy:sparkle_appcast'].invoke
  # Rake::Task['deploy:release_notes'].invoke
  # Rake::Task['deploy:upload'].invoke
  # Rake::Task['xcode:clean'].invoke
  Rake::Task['dependencies:clean'].invoke
end

namespace :deploy do
  APP_BUILD_ROOT = File.expand_path("build/Release")
  
  desc 'Prepare a package to be used as a webapp base app'
  task :package_webapp_base_app => ['dependencies:copy', :release, :pkg] do
    contents = File.join(APP_BUILD_ROOT, 'WebAppTemplate.app', 'Contents')
    
    info_plist = File.join(contents, 'Info.plist')
    FileUtils.rm info_plist
    FileUtils.cp File.expand_path('../config/Info.plist.sample', __FILE__), info_plist
    `"rm -r #{File.join(contents, 'Resources', 'bundles', '*.wabundle')}"`
    
    create_bz2_package!
  end
  
  private
  
  def create_bz2_package!
    sh "cd #{APP_BUILD_ROOT} && /usr/bin/tar -cjf ../../pkg/webapp_base_app.tar.bz2 WebAppTemplate.app"
  end
end